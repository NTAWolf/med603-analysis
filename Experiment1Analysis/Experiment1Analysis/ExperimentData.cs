// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.IO;
using System.Collections.Generic;

namespace Experiment1Analysis
{
	public class ExperimentData
	{
		Demographics demographics;
		public List<Participant> participants = new List<Participant>();

		public ExperimentData (string pathToParticipantFolder)
		{
			string pathToDemographic = Path.Combine(pathToParticipantFolder, "demographic.csv");

			Console.WriteLine("Experiment.pathToDemographic: " + pathToDemographic);

			using(StreamReader stream = new StreamReader(pathToDemographic))
			{
				demographics = new Demographics(stream);
			}

			foreach(DemographicData d in demographics.demoData)
			{
				//Doesn't work before Participant class is done
				participants.Add(new Participant(pathToParticipantFolder, d));
			}
		}

		//Returns the mean of all thresholds per trial, disregarding 

		/// <summary>
		/// Gets the threshold mean for all trials regardless of the number 
		/// of trials connected to each participant.
		/// </summary>
		/// <returns>The threshold mean per trial.</returns>
		public float GetMeanOfThresholdPerTrial() 
		{
			return Statistics.Mean(GetThresholdPerTrial().ToArray());
		}

		/// <summary>
		/// Gets the estimated threshold value from each trials.
		/// </summary>
		/// <returns>The threshold per trial.</returns>
		public List<float> GetThresholdPerTrial()
		{
			List<float> thresholdForEachTrial = new List<float>();
			
			foreach(Participant p in participants)
			{
				foreach(Trial t in p.trials)
				{
					thresholdForEachTrial.Add(t.Threshold);
				}
			}

			return thresholdForEachTrial;
		}

		//Returns the mean of all participant thresholds

		/// <summary>
		/// Gets the mean of all participants' estimated threshold values.
		/// </summary>
		/// <returns>The threshold mean per participant.</returns>
		public float GetMeanOfThresholdPerParticipant()
		{
			return Statistics.Mean(GetThresholdPerParticipant().ToArray());
		}

		/// <summary>
		/// Gets the estimated threshold per participant, regardless of 
		/// how many or how few trials the participant did.
		/// </summary>
		/// <returns>The estimated threshold for each participant.</returns>
		public List<float> GetThresholdPerParticipant()
		{
			List<float> participantThreshold = new List<float>();
			
			foreach(Participant p in participants)
			{
				participantThreshold.Add(p.GetMean());
			}

			return participantThreshold;
		}

		public void DiscardTrialsWithTooFewReverses(int lowestNumberOfReverses)
		{
			foreach(Participant p in participants)
			{
				p.DiscardTrialsWithTooFewReverses(lowestNumberOfReverses);
			}
		}
	}
}

